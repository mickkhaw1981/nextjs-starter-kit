---
description: 
globs: 
alwaysApply: true
---
## IMPORTANT:
- After all changes are made, ALWAYS build the project with `npm run build`. Ignore warnings, fix errors.
- Always kill all existing related servers that may have been created in previous testing before trying to start a new server.
- Always add a one-sentence summary of changes to `.cursor-updates` file in markdown format at the end of every agent interaction.
- Finally, don't update git with `git add . && git commit -m "..."` without asking the user's permission

## Coding Best Practices
- Keep the codebase very clean and organized
- Always look for existing code to iterate on instead of creating new code.
- **Do not modify code or UI elements that already work, unless explicitly instructed. 
- Avoid duplicating existing functionality; reuse working components whenever possible.
- Write comprehensive tests for featureswhere the cost of failure is high e.g. authentication, payments. When in doubt, ask for clarification
- Always ask clarifying questions if tasks or requirements are unclear.
- Write thorough tests for all major functionality where the cost of failure is high e.g. authentication, payments

## Typescript Conventions:
- Strict mode. Avoid `any`.


## Env Rules
- If you update environment variables, update the `.env.example` file
- All environment variables should go in `.env.local`
- Do not expose environment variables to the frontend
- Use `NEXT_PUBLIC_` prefix for environment variables that need to be accessed from the frontend
- You may import environment variables in server actions and components by using `process.env.VARIABLE_NAME`




